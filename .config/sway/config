# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left s
set $down n
set $up r
set $right t
# Your preferred terminal emulator
set $term termite
set $menu bemenu-run --fn "Roboto Mono 12" --nb "#282828" --nf "d8d8d8"

default_border pixel 2 
default_floating_border pixel 2 
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

exec --no-startup-id swaybg -c "#282828" -m solid_color
#output * bg -c "#282828" fill 

#exec --no-startup-id swaybg -c "#282828"
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec --no-startup-id $term

    # Kill focused window
    bindsym $mod+x kill

    # Start your launcher
    bindsym $mod+space exec --no-startup-id $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+b reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+backspace exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+ctrl+$left move left
    bindsym $mod+ctrl+$down move down
    bindsym $mod+ctrl+$up move up
    bindsym $mod+ctrl+$right move right
    # Ditto, with arrow keys
    bindsym $mod+ctrl+Left move left
    bindsym $mod+ctrl+Down move down
    bindsym $mod+ctrl+Up move up
    bindsym $mod+ctrl+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# move to next/previous workspace [in this output] and tab back and forth 
bindsym $mod+u workspace next 
bindsym $mod+shift+u workspace prev 
#bindsym $mod+u workspace next_on_output
#bindsym $mod+shift+u workspace prev_on_output
bindsym $mod+tab workspace back_and_forth
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+z splith
    bindsym $mod+p splitv

    # Switch the current container between different layout styles
#    bindsym $mod+s layout stacking
#    bindsym $mod+w layout tabbed
#    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+e fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+a floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+a focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+i focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+h move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+h scratchpad show

input * xkb_layout "de"
 input * xkb_variant "neo"
 #input "MANUFACTURER1 Keyboard" xkb_model "pc101"

# use swaymsg -t get_inputs for a list of devices 
input "1118:1957:Microsoft_Microsoft®_2.4GHz_Transceiver_v9.0_Mouse" {
    accel_profile flat
    pointer_accel 0

}

#Input device: Microsoft Microsoft® 2.4GHz Transceiver v9.0 Mouse
#  Type: Mouse
#  Identifier: 1118:1957:Microsoft_Microsoft®_2.4GHz_Transceiver_v9.0_Mouse
#  Product ID: 1957
#  Vendor ID: 1118
#  Libinput Send Events: enabled
#
#
#input "id-of-you-input-device" {
#    accel_profile flat
#    pointer_accel 0.1
#}

input * {
    repeat_delay 200
    repeat_rate 50
}

# programs
bindsym $mod+v exec --no-startup-id firefox
bindsym $mod+c exec --no-startup-id termite -e ranger
bindsym $mod+m exec --no-startup-id thunderbird
bindsym $mod+l exec --no-startup-id emacs


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    #status_command while date +'%Y-%m-%d %l:%M %p'; do sleep 15; done
#    status_command while /home/mo/.config/sway/swaybarconfig; do sleep 5; done 
#    font Roboto Mono 10
##    mode hide
##    hidden_state hide
##    modifier $mod
#
#    colors {
#        statusline #d8d8d8
#        background #282828
#        inactive_workspace #505050 #505050 #d8d8d8  
#        focused_workspace #ac4142 #ac4142 #d8d8d8  
#    }
#}

# programs 
exec xrdb .Xresources 
exec redshift -l 50.1:8.6 -t 4000:3000
# run waybar alternative bar to swaybar
#exec waybar

include /etc/sway/config.d/*

set $foreground #d8d8d8
set $active #ac4142
set $highlight #505050
set $background #505050

# class                 border 		 backgr. 	text 	indicator	child_border
client.focused          $foreground $highlight $foreground $active $foreground  
client.focused_inactive $background $background $foreground $foreground $highlight  
client.unfocused        $background $background $foreground $foreground $highlight  
client.urgent           $background $background $foreground $foreground $highlight 
client.placeholder      $background $background $foreground $foreground $highlight

client.background       $active


